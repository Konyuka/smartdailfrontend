{"remainingRequest":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\TAILTASK\\user\\src\\components\\modals\\CampaignModal.vue?vue&type=style&index=0&id=4b12d684&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\src\\components\\modals\\CampaignModal.vue","mtime":1608423075353},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAY2xpY2s9Im1vZGFsID0gIW1vZGFsIgo="},{"version":3,"sources":["CampaignModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkMA","file":"CampaignModal.vue","sourceRoot":"src/components/modals","sourcesContent":["<template>\n  <div>\n    <!-- Campaign Modal -->\n    <div v-if=\"modal\" class=\"fixed z-10 inset-0 overflow-y-auto\">\n      <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        \n        <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n          <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n        </div>\n\n        <!-- This element is to trick the browser into centering the modal contents. -->\n        <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n      \n        <div class=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n          \n          <div v-if=\"select\">\n          <div>\n            <label id=\"listbox-label\" class=\"text-center block text-md font-medium text-black\">\n              Select User Campaign\n            </label>\n            <div class=\"mt-4 px-20\">\n            <select v-model=\"selectedCampaign\"  class=\"w-full border bg-white rounded px-3 py-2 outline-none\">\n              <option v-for=\"option in options\" :key=\"option\" >{{ option }}</option>\n            </select>\n            </div>\n          </div>\n\n          <div class=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n            <button @click=\"submitCampaign\" type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-900 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\">\n              Submit\n            </button>\n            <button  @click.prevent=\"logout\" type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\">\n              Logout\n            </button>\n          </div>\n          </div>\n\n        <div v-else class=\"m-auto w-1/2\">\n          <div >\n          <h3 class=\"text-lg font-bold text-gray-700\">\n            Answer Phone Conference\n          </h3>    \n          <svg class=\"h-28 w-28 ml-14 pt-5 transition duration-500 ease-in-out text-indigo-400 hover:text-indigo-900 transform hover:-translate-y-1 hover:scale-110\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n          </svg>\n          </div>\n        </div>\n\n        </div>\n\n\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Swal from 'sweetalert2';\nwindow.Swal = Swal;\nconst Toast = Swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 5000,\n  timerProgressBar: true,\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\nwindow.Toast = Toast;\n\nexport default {\n  name: 'CampaignModal',\n  data(){\n    return{\n      modal: true,\n      options: [],\n      selectedCampaign: null,\n      seen: false,\n    }\n  },\n  mounted() {\n     this.options = this.$store.state.campaigns\n  },\n  computed: {\n    isDisable() {\n      return this.selectedCampaign == null;\n    },\n    select(){\n      return this.$parent.select\n    },\n    campaigns(){\n      return this.$store.state.campaigns;\n    }\n  },\n  methods:{\n    async submitCampaign() {\n      console.log(this.selectedCampaign)\n      try {\n        let payload = { username: localStorage.getItem('user'), campaign: this.selectedCampaign }\n        localStorage.setItem('campaignTemp', this.selectedCampaign)\n        this.$parent.select = false;\n        let response = await this.$http.post(\"/api/v1/campaign/login \", payload, { headers: { \"Content-Type\": \"application/json\",\"Accept\": \"application/json\", \"Authorization\": `Bearer ${localStorage.getItem('token')}` } });\n        console.log(response)\n        this.afterLogin()\n        response.data.campaign = this.selectedCampaign\n        console.log(response.data)\n        this.$store.dispatch(\"setPhoneCamps\", response.data); \n      } \n      catch (error) {\n        console.log(error)\n        if(error.response.data.error == 'login timeout'){\n          let payload = { title: 'Call Agent Again', text: 'Kindly pick the call to start a conference.You must select a campaign to successfully login to the system and recieve the call',}\n          this.$store.dispatch(\"resetError\",payload);\n        }else{\n          let payload = { title: 'Login Failed ', text: error.response.data.error }\n          this.$store.dispatch(\"resetError\",payload);\n        }\n\n\n        this.$parent.campaignModal = true\n        this.$parent.tryAgain = true\n        this.$parent.errorModal = true\n        //console.log(error)\n      }\n    },\n    afterLogin(){\n      this.$parent.select = false\n      this.webSocket()\n      \n    },\n    webSocket(){\n      let connection = new WebSocket(\"ws://\" + this.$socket +\"/api/v1/ws\")\n      connection.onopen = () => {\n        console.log(\"Successfully connected to the  websocket server\")\n        let payload = {\"username\": localStorage.getItem('user'),\"phone\":localStorage.getItem('phone'), \"campaign\": localStorage.getItem('campaign')}\n        connection.send(JSON.stringify(payload))\n        Toast.fire({\n            type: 'success',\n            title: 'Successful Login',\n            icon: 'success',\n          });\n      };\n      connection.onmessage = (message) => {\n        let data = JSON.parse(message.data);\n        this.$store.dispatch(\"fromWebsocket\", data);\n      };\n      connection.onclose = function(e) {\n        console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n        this.$parent.showcampaignModal = true\n        setTimeout(function() {\n          this.webSocket();\n        }, 2000);\n      };\n      connection.onerror = (evt) => {\n        console.log(\"Socket closed: \", evt);\n      };\n    },\n    logout() {\n      let payload = { \"username\": localStorage.getItem('user'), }\n      let token = localStorage.getItem('token')\n      return this.$http\n        .post(\"/api/v1/logout\", payload, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          })\n        .then((response) => {\n          if(response){\n            console.log(response.data)\n          }\n          this.$store.dispatch(\"logout\");\n          this.$router.push(\"/\");\n\n           })\n        .catch((error) => {\n          console.log(error.response);\n          console.log(error.response.data.status);\n          if (error.response.data.status == \"Unauthorized\") {\n            this.$store.dispatch(\"logout\");\n            this.$router.push(\"\");\n          }\n          })\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n @click=\"modal = !modal\"\n</style>\n"]}]}