{"remainingRequest":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\TAILTASK\\user\\src\\views\\Dialer.vue?vue&type=template&id=8b728f52&scoped=true&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\src\\views\\Dialer.vue","mtime":1610612529803},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\TAILTASK\\user\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}